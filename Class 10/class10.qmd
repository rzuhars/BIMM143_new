---
title: "Class 10- Structural Bioinformatics (pt 1)"
author: "Renee Zuhars- PID: A17329856"
format: typst-pdf
toc: TRUE
---

sequence: unfolded chain of AA chain, highly mobile, inactive.

structure: ordered in precise 3D arrangement, stable but dynamic.

function: active in specific "conformations".

# The PDB Database

The main repository of biomolecular structure data is called the [Protein Data Bank](https://www.rcsb.org) (PDB for short). It is the second oldest database (after GenBank). 

What is currently in the PDB? We can access current composition stats [here](https://www.rcsb.org/stats)

```{r}
stats <- read.csv("pdb.dist.by.exp.method.csv", row.names = 1)
stats
```

### Question 1
> What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy?

```{r}
#substitute commas for nothing in values with commas
stats$X.ray <- gsub(",", "", stats$X.ray) 

#converts characters to numbers
y <- as.numeric(stats$X.ray) 

#sum
sum(y)

```
I am going to turn this snippet into a function so I can use it any time I have this comma problem. 

```{r}
comma.sum <- function(x) {
  y <- gsub (",", "",x)
  return(sum(as.numeric(y)))
}
```

```{r}
xray.sum <- comma.sum(stats$X.ray)
em.sum <- comma.sum(stats$EM)
total.sum <- comma.sum(stats$Total)

xray.sum/total.sum * 100

em.sum/total.sum * 100
```
82 percent of structures have been solved with X-ray, and 11 percent of functions have been solved by Electron Microscopy, making a total of 93 percent of protein structures solved by both methods. 


### Question 2
> What proportion of structures in the PDB are protein (only)?

```{r}
comma.sum(stats["Protein (only)","Total"]) / comma.sum(stats[,"Total"])
```
86% of structures in the PDB are protein only. 


### Question 3
> skipped

# Visualizing with Mol-star

Explore the HIV-1 protease structure with PDB code `1HSG`
Mol-star homepage: https://molstar.org/viewer/

![Figure 1. A first view of HIV-Pr](1HSG.png)

### Question 4
> Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

We just see one atom per water because it is the simplest way for MolStar to render the water molecules, as there are a lot of them. Below is a figure where the water molecules are removed:

![Figure 2. Molecular surface of HIV-Pr](1HSG molsurface.png)


### Question 5
> There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have?

This critical "conserved" water molecule is HOH 308. 


### Question 6
> Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water.

![Figure 3. The catalytically important ASP 25 and drug intreaction HOH 308](1HSG keyphoto.png)

# Using the bio3d prackage in R

The Bio3D package is focused on structural bioinformatics analysis and allows us to read and analyze PDB (and related) data. 

```{r}
library(bio3d)

pdb <- read.pdb("1hsg")
pdb
```

we can see atom data with `pdb$atom`
```{r}
head (pdb$atom)
```

### Question 7
> How many amino acid residues are there in this pdb object? 

198 amino acid residues. 

### Question 8
> Name one of the two non-protein residues? 

HOH (127)

### Question 9
>How many protein chains are in this structure? 

2 protein chains. 


now let's look at protein sequence.
```{r}
head(pdbseq(pdb))
```

We can make quick 3d viz with the `view.pdb()`
```{r}
# library(bio3dview)
# library(NGLVieweR)
# view.pdb(pdb, backgroundColor = "black", colorScheme = "sse")
```

```{r}
# sel <- atom.select(pdb, resno = 25)

# view.pdb(pdb, cols=c("turquoise", "pink"),
      #  highlight = sel,
      #  highlight.style = "spacefill")
```


# Predicting functional motions of a single structure

We can finish off today with a bioinformatics prediction of the functional motions of a protein.

We will run a Normal Mode Analysis (NMA)

```{r}
adk <- read.pdb("6s36")
adk
```

```{r}
m <- nma(adk)
plot(m)
```

```{r}
# view.nma(m)
```

We can write out a trajectory of the predicted dynamics and view this in Mol-Star

```{r}
mktrj(m, file = "nma.pdb")
```





